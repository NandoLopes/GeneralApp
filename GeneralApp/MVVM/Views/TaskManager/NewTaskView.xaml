<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="GeneralApp.MVVM.Views.TaskManager.NewTaskView"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             Title="{Binding Title}">

    <Grid RowDefinitions=".8*,.2*">
        <VerticalStackLayout Padding="20,20,20,20"
                         Spacing="10">
            <Grid>
                <RoundRectangle/>
                <Picker x:Name="picker"
                        Title="Select Category"
                        TextColor="Black"
                        Margin="10"
                        ItemsSource="{Binding Categories}"
                        ItemDisplayBinding="{Binding Name}"
                        SelectedItem="{Binding SelectedCategory}"
                        SelectedIndexChanged="Picker_SelectedIndexChanged">
                </Picker>
            </Grid>

            <Grid>
                <RoundRectangle/>
                <Grid ColumnDefinitions="auto,*"
                      Margin="10">
                    <Label Text="Task Name:"
                           VerticalOptions="Center"/>
                    <Entry Grid.Column="1"
                           Placeholder="Task Name"
                           VerticalOptions="Center"
                           PlaceholderColor="DarkGray"
                           TextColor="Black"
                           Text="{Binding NewTask.Name}"
                           TextChanged="Entry_TextChanged"/>
                </Grid>
            </Grid>

            <Grid>
                <toolkit:Expander IsExpanded="{Binding Source={x:Reference dateCheckBox}, Path=IsChecked}">

                    <toolkit:Expander.Header>
                        <Grid ColumnDefinitions="auto,*">
                            <RoundRectangle HorizontalOptions="CenterAndExpand" Grid.ColumnSpan="2"/>
                            <Label Text="Has Due Date?"
                                   VerticalOptions="Center"
                                   Margin="10"/>
                            <CheckBox Grid.Column="1"
                                      HorizontalOptions="End"
                                      Margin="10"
                                      x:Name="dateCheckBox"
                                      Color="Black"
                                      IsChecked="{Binding NewTask.HasDueDate, Mode=TwoWay}"
                                      CheckedChanged="DateCheckBox_CheckedChanged"/>
                        </Grid>
                    </toolkit:Expander.Header>

                    <toolkit:Expander.Content>
                        <Grid ColumnDefinitions="auto,*">
                            <RoundRectangle HorizontalOptions="CenterAndExpand" Grid.ColumnSpan="2"/>

                            <Label Text="Due Date:"
                                   VerticalOptions="Center"
                                   Margin="10"/>
                            <DatePicker Grid.Column="1"
                                        VerticalOptions="Center"
                                        TextColor="Black"
                                        Format="dd/MM/yyyy"
                                        Date="{Binding NewTask.DueDate, Mode=TwoWay}"/>
                        </Grid>
                    </toolkit:Expander.Content>
                </toolkit:Expander>
            </Grid>
        </VerticalStackLayout>

        <Button Grid.Row="1"
                BackgroundColor="#04AA6D"
                VerticalOptions="CenterAndExpand"
                Margin="20"
                IsEnabled="False"
                Text="Save"
                Clicked="SaveItemClicked">
            <Button.Triggers>
                <DataTrigger TargetType="Button"
                             Binding="{Binding IsValid}"
                             Value="False">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Setter Property="Opacity" Value="0.5"/>
                </DataTrigger>

                <DataTrigger TargetType="Button"
                             Binding="{Binding IsValid}"
                             Value="True">
                    <Setter Property="IsEnabled" Value="True"/>
                    <Setter Property="Opacity" Value="1.0"/>
                </DataTrigger>
            </Button.Triggers>
        </Button>
    </Grid>

    <ContentPage.Behaviors>
        <toolkit:EventToCommandBehavior Command="{Binding AppearingCommand}" EventName="Appearing" />
    </ContentPage.Behaviors>
</ContentPage>